{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18265693\\\\Desktop\\\\thintank-proj\\\\frontend\\\\src\\\\pages\\\\SettingsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUserProfile, updateProfileVisibility, updateNotificationPreference } from '../services/api';\nimport './SettingsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsPage = ({\n  userId\n}) => {\n  _s();\n  const [settings, setSettings] = useState({\n    profileVisibility: false,\n    notificationPreference: false\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    const fetchUserSettings = async () => {\n      try {\n        setLoading(true);\n        const userData = await getUserProfile(userId);\n        setSettings({\n          profileVisibility: userData.profileVisibility,\n          notificationPreference: userData.notificationPreference\n        });\n        setError(null);\n      } catch (err) {\n        setError('Failed to load user settings. Please try again later.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserSettings();\n  }, [userId]);\n  const handleVisibilityChange = async e => {\n    const isPublic = e.target.checked;\n    try {\n      setError(null);\n      setSuccessMessage(null);\n      await updateProfileVisibility(userId, isPublic);\n      setSettings(prevSettings => ({\n        ...prevSettings,\n        profileVisibility: isPublic\n      }));\n      setSuccessMessage('Profile visibility updated successfully!');\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      setError('Failed to update profile visibility. Please try again.');\n      console.error(err);\n    }\n  };\n  const handleNotificationChange = async e => {\n    const isEnabled = e.target.checked;\n    try {\n      setError(null);\n      setSuccessMessage(null);\n      await updateNotificationPreference(userId, isEnabled);\n      setSettings(prevSettings => ({\n        ...prevSettings,\n        notificationPreference: isEnabled\n      }));\n      setSuccessMessage('Notification preference updated successfully!');\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      setError('Failed to update notification preference. Please try again.');\n      console.error(err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: \"Loading settings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"User Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Profile Visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Make your profile visible to other researchers in the system.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: settings.profileVisibility,\n            onChange: handleVisibilityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-status\",\n          children: settings.profileVisibility ? 'Public' : 'Private'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Receive notifications about system updates and research opportunities.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: settings.notificationPreference,\n            onChange: handleNotificationChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-status\",\n          children: settings.notificationPreference ? 'Enabled' : 'Disabled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPage, \"jlbVqANukVY+45xeNuzFUmz7SpI=\");\n_c = SettingsPage;\nexport default SettingsPage;\nvar _c;\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"names":["React","useState","useEffect","getUserProfile","updateProfileVisibility","updateNotificationPreference","jsxDEV","_jsxDEV","SettingsPage","userId","_s","settings","setSettings","profileVisibility","notificationPreference","loading","setLoading","error","setError","successMessage","setSuccessMessage","fetchUserSettings","userData","err","console","handleVisibilityChange","e","isPublic","target","checked","prevSettings","setTimeout","handleNotificationChange","isEnabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/18265693/Desktop/thintank-proj/frontend/src/pages/SettingsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getUserProfile, updateProfileVisibility, updateNotificationPreference } from '../services/api';\r\nimport './SettingsPage.css';\r\n\r\nconst SettingsPage = ({ userId }) => {\r\n  const [settings, setSettings] = useState({\r\n    profileVisibility: false,\r\n    notificationPreference: false,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserSettings = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const userData = await getUserProfile(userId);\r\n        setSettings({\r\n          profileVisibility: userData.profileVisibility,\r\n          notificationPreference: userData.notificationPreference,\r\n        });\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to load user settings. Please try again later.');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserSettings();\r\n  }, [userId]);\r\n\r\n  const handleVisibilityChange = async (e) => {\r\n    const isPublic = e.target.checked;\r\n    try {\r\n      setError(null);\r\n      setSuccessMessage(null);\r\n      \r\n      await updateProfileVisibility(userId, isPublic);\r\n      setSettings(prevSettings => ({\r\n        ...prevSettings,\r\n        profileVisibility: isPublic\r\n      }));\r\n      \r\n      setSuccessMessage('Profile visibility updated successfully!');\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (err) {\r\n      setError('Failed to update profile visibility. Please try again.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleNotificationChange = async (e) => {\r\n    const isEnabled = e.target.checked;\r\n    try {\r\n      setError(null);\r\n      setSuccessMessage(null);\r\n      \r\n      await updateNotificationPreference(userId, isEnabled);\r\n      setSettings(prevSettings => ({\r\n        ...prevSettings,\r\n        notificationPreference: isEnabled\r\n      }));\r\n      \r\n      setSuccessMessage('Notification preference updated successfully!');\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (err) {\r\n      setError('Failed to update notification preference. Please try again.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"card\">Loading settings...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h2 className=\"card-title\">User Settings</h2>\r\n      </div>\r\n      \r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {successMessage && <div className=\"alert alert-success\">{successMessage}</div>}\r\n      \r\n      <div className=\"settings-container\">\r\n        <div className=\"setting-item\">\r\n          <div className=\"setting-info\">\r\n            <h3>Profile Visibility</h3>\r\n            <p>Make your profile visible to other researchers in the system.</p>\r\n          </div>\r\n          <label className=\"toggle-switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={settings.profileVisibility}\r\n              onChange={handleVisibilityChange}\r\n            />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n          <div className=\"setting-status\">\r\n            {settings.profileVisibility ? 'Public' : 'Private'}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"setting-item\">\r\n          <div className=\"setting-info\">\r\n            <h3>Notifications</h3>\r\n            <p>Receive notifications about system updates and research opportunities.</p>\r\n          </div>\r\n          <label className=\"toggle-switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={settings.notificationPreference}\r\n              onChange={handleNotificationChange}\r\n            />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n          <div className=\"setting-status\">\r\n            {settings.notificationPreference ? 'Enabled' : 'Disabled'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}