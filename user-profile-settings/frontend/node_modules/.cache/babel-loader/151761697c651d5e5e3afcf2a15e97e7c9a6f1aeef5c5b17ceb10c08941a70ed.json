{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18265693\\\\Desktop\\\\sem2-proj\\\\Project\\\\thintank-proj\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport UserProfile from './pages/UserProfile';\nimport ProfileEditor from './pages/ProfileEditor';\nimport UserSettings from './pages/UserSettings';\nimport LoginPage from './pages/LoginPage';\nimport AuthGuard from './components/AuthGuard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [appRefreshTrigger, setAppRefreshTrigger] = useState(Date.now());\n\n  // Function to refresh the entire app state\n  const refreshAppState = () => {\n    setAppRefreshTrigger(Date.now());\n  };\n  useEffect(() => {\n    // Check authentication status on app load and when localStorage changes\n    const checkAuth = () => {\n      const authToken = localStorage.getItem('authToken');\n      const userId = localStorage.getItem('currentUser');\n      if (authToken && userId) {\n        setCurrentUser(userId);\n        setIsAuthenticated(true);\n      } else {\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n      }\n    };\n\n    // Initial check\n    checkAuth();\n\n    // Listen for storage events (when localStorage changes in other tabs)\n    window.addEventListener('storage', checkAuth);\n\n    // Also refresh when the app refresh trigger changes\n    checkAuth();\n    return () => {\n      window.removeEventListener('storage', checkAuth);\n    };\n  }, [appRefreshTrigger]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/dashboard\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLoginSuccess: refreshAppState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(AuthGuard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(UserProfile, {\n                  userId: currentUser\n                }, `profile-${appRefreshTrigger}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit-profile\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(ProfileEditor, {\n                  userId: currentUser\n                }, `editor-${appRefreshTrigger}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/preferences\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(UserSettings, {\n                  userId: currentUser\n                }, `settings-${appRefreshTrigger}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: isAuthenticated ? \"/dashboard\" : \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: isAuthenticated ? \"/dashboard\" : \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9pPhs3d3luJY1tis/S983pYLSSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","NavigationBar","UserProfile","ProfileEditor","UserSettings","LoginPage","AuthGuard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","appRefreshTrigger","setAppRefreshTrigger","Date","now","refreshAppState","checkAuth","authToken","localStorage","getItem","userId","window","addEventListener","removeEventListener","children","className","path","element","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","_c","$RefreshReg$"],"sources":["C:/Users/18265693/Desktop/sem2-proj/Project/thintank-proj/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport UserProfile from './pages/UserProfile';\r\nimport ProfileEditor from './pages/ProfileEditor';\r\nimport UserSettings from './pages/UserSettings';\r\nimport LoginPage from './pages/LoginPage';\r\nimport AuthGuard from './components/AuthGuard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [appRefreshTrigger, setAppRefreshTrigger] = useState(Date.now());\r\n\r\n  // Function to refresh the entire app state\r\n  const refreshAppState = () => {\r\n    setAppRefreshTrigger(Date.now());\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check authentication status on app load and when localStorage changes\r\n    const checkAuth = () => {\r\n      const authToken = localStorage.getItem('authToken');\r\n      const userId = localStorage.getItem('currentUser');\r\n      \r\n      if (authToken && userId) {\r\n        setCurrentUser(userId);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setCurrentUser(null);\r\n        setIsAuthenticated(false);\r\n      }\r\n    };\r\n\r\n    // Initial check\r\n    checkAuth();\r\n\r\n    // Listen for storage events (when localStorage changes in other tabs)\r\n    window.addEventListener('storage', checkAuth);\r\n    \r\n    // Also refresh when the app refresh trigger changes\r\n    checkAuth();\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', checkAuth);\r\n    };\r\n  }, [appRefreshTrigger]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Routes>\r\n          {/* Public Route */}\r\n          <Route \r\n            path=\"/login\" \r\n            element={isAuthenticated ? <Navigate to=\"/dashboard\" replace /> : <LoginPage onLoginSuccess={refreshAppState} />} \r\n          />\r\n\r\n          {/* Protected Routes */}\r\n          <Route element={<AuthGuard />}>\r\n            <Route\r\n              path=\"/dashboard\"\r\n              element={\r\n                <>\r\n                  <NavigationBar />\r\n                  <div className=\"container\">\r\n                    <UserProfile userId={currentUser} key={`profile-${appRefreshTrigger}`} />\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/edit-profile\"\r\n              element={\r\n                <>\r\n                  <NavigationBar />\r\n                  <div className=\"container\">\r\n                    <ProfileEditor userId={currentUser} key={`editor-${appRefreshTrigger}`} />\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/preferences\"\r\n              element={\r\n                <>\r\n                  <NavigationBar />\r\n                  <div className=\"container\">\r\n                    <UserSettings userId={currentUser} key={`settings-${appRefreshTrigger}`} />\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </Route>\r\n\r\n          {/* Default redirect */}\r\n          <Route path=\"/\" element={<Navigate to={isAuthenticated ? \"/dashboard\" : \"/login\"} replace />} />\r\n          <Route path=\"*\" element={<Navigate to={isAuthenticated ? \"/dashboard\" : \"/login\"} replace />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}