{"ast":null,"code":"// Renamed methods for better consistency and clarity:\n\n//     getUserProfile → fetchUserDetails\n//     updateUserProfile → saveUserDetails\n//     updateProfileVisibility → updateProfileStatus\n//     updateNotificationPreference → updateNotificationSettings\n\n// Used process.env.REACT_APP_API_URL instead of hardcoding the API URL.\n// Refactored API error handling:\n\n//     Created handleApiError() to streamline error logs and avoid redundant try-catch logic.\n\n// Renamed api → apiClient to make it clearer.\n// Grouped exports at the bottom using apiService for better readability and modular imports.\n\nimport axios from 'axios';\nconst BASE_API_URL = process.env.REACT_APP_API_URL;\nconst apiClient = axios.create({\n  baseURL: BASE_API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst handleApiError = (error, message) => {\n  console.error(`${message}:`, error.response ? error.response.data : error.message);\n  throw error;\n};\n\n// User Profile API Calls\nexport const fetchUserDetails = async userId => {\n  try {\n    const response = await apiClient.get(`/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    handleApiError(error, 'Failed to fetch user details');\n  }\n};\nexport const saveUserDetails = async (userId, userData) => {\n  try {\n    const response = await apiClient.put(`/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    handleApiError(error, 'Failed to update user profile');\n  }\n};\n\n// User Settings API Calls\nexport const updateProfileStatus = async (userId, isPublic) => {\n  try {\n    const response = await apiClient.patch(`/users/${userId}/visibility`, {\n      isPublic\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, 'Failed to update profile visibility');\n  }\n};\nexport const updateNotificationSettings = async (userId, isEnabled) => {\n  try {\n    const response = await apiClient.patch(`/users/${userId}/notifications`, {\n      isEnabled\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, 'Failed to update notification settings');\n  }\n};\n\n// Export API functions\nconst apiService = {\n  fetchUserDetails,\n  saveUserDetails,\n  updateProfileStatus,\n  updateNotificationSettings\n};\nexport default apiService;","map":{"version":3,"names":["axios","BASE_API_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","handleApiError","error","message","console","response","data","fetchUserDetails","userId","get","saveUserDetails","userData","put","updateProfileStatus","isPublic","patch","updateNotificationSettings","isEnabled","apiService"],"sources":["/home/dawood/Downloads/thintank-proj/frontend/src/services/api.js"],"sourcesContent":["// Renamed methods for better consistency and clarity:\r\n\r\n//     getUserProfile → fetchUserDetails\r\n//     updateUserProfile → saveUserDetails\r\n//     updateProfileVisibility → updateProfileStatus\r\n//     updateNotificationPreference → updateNotificationSettings\r\n\r\n// Used process.env.REACT_APP_API_URL instead of hardcoding the API URL.\r\n// Refactored API error handling:\r\n\r\n//     Created handleApiError() to streamline error logs and avoid redundant try-catch logic.\r\n\r\n// Renamed api → apiClient to make it clearer.\r\n// Grouped exports at the bottom using apiService for better readability and modular imports.\r\n\r\nimport axios from 'axios';\r\n\r\nconst BASE_API_URL = process.env.REACT_APP_API_URL\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: BASE_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nconst handleApiError = (error, message) => {\r\n  console.error(`${message}:`, error.response ? error.response.data : error.message);\r\n  throw error;\r\n};\r\n\r\n// User Profile API Calls\r\nexport const fetchUserDetails = async (userId) => {\r\n  try {\r\n    const response = await apiClient.get(`/users/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    handleApiError(error, 'Failed to fetch user details');\r\n  }\r\n};\r\n\r\nexport const saveUserDetails = async (userId, userData) => {\r\n  try {\r\n    const response = await apiClient.put(`/users/${userId}`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    handleApiError(error, 'Failed to update user profile');\r\n  }\r\n};\r\n\r\n// User Settings API Calls\r\nexport const updateProfileStatus = async (userId, isPublic) => {\r\n  try {\r\n    const response = await apiClient.patch(`/users/${userId}/visibility`, { isPublic });\r\n    return response.data;\r\n  } catch (error) {\r\n    handleApiError(error, 'Failed to update profile visibility');\r\n  }\r\n};\r\n\r\nexport const updateNotificationSettings = async (userId, isEnabled) => {\r\n  try {\r\n    const response = await apiClient.patch(`/users/${userId}/notifications`, { isEnabled });\r\n    return response.data;\r\n  } catch (error) {\r\n    handleApiError(error, 'Failed to update notification settings');\r\n  }\r\n};\r\n\r\n// Export API functions\r\nconst apiService = {\r\n  fetchUserDetails,\r\n  saveUserDetails,\r\n  updateProfileStatus,\r\n  updateNotificationSettings,\r\n};\r\n\r\nexport default apiService;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAElD,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;EACzCC,OAAO,CAACF,KAAK,CAAC,GAAGC,OAAO,GAAG,EAAED,KAAK,CAACG,QAAQ,GAAGH,KAAK,CAACG,QAAQ,CAACC,IAAI,GAAGJ,KAAK,CAACC,OAAO,CAAC;EAClF,MAAMD,KAAK;AACb,CAAC;;AAED;AACA,OAAO,MAAMK,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EAChD,IAAI;IACF,MAAMH,QAAQ,GAAG,MAAMR,SAAS,CAACY,GAAG,CAAC,UAAUD,MAAM,EAAE,CAAC;IACxD,OAAOH,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,cAAc,CAACC,KAAK,EAAE,8BAA8B,CAAC;EACvD;AACF,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAG,MAAAA,CAAOF,MAAM,EAAEG,QAAQ,KAAK;EACzD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMR,SAAS,CAACe,GAAG,CAAC,UAAUJ,MAAM,EAAE,EAAEG,QAAQ,CAAC;IAClE,OAAON,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,cAAc,CAACC,KAAK,EAAE,+BAA+B,CAAC;EACxD;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,mBAAmB,GAAG,MAAAA,CAAOL,MAAM,EAAEM,QAAQ,KAAK;EAC7D,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMR,SAAS,CAACkB,KAAK,CAAC,UAAUP,MAAM,aAAa,EAAE;MAAEM;IAAS,CAAC,CAAC;IACnF,OAAOT,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,cAAc,CAACC,KAAK,EAAE,qCAAqC,CAAC;EAC9D;AACF,CAAC;AAED,OAAO,MAAMc,0BAA0B,GAAG,MAAAA,CAAOR,MAAM,EAAES,SAAS,KAAK;EACrE,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMR,SAAS,CAACkB,KAAK,CAAC,UAAUP,MAAM,gBAAgB,EAAE;MAAES;IAAU,CAAC,CAAC;IACvF,OAAOZ,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,cAAc,CAACC,KAAK,EAAE,wCAAwC,CAAC;EACjE;AACF,CAAC;;AAED;AACA,MAAMgB,UAAU,GAAG;EACjBX,gBAAgB;EAChBG,eAAe;EACfG,mBAAmB;EACnBG;AACF,CAAC;AAED,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}