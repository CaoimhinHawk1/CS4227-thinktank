{"ast":null,"code":"var _jsxFileName = \"/home/dawood/Downloads/Project/thintank-proj/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport UserProfile from './pages/UserProfile';\nimport ProfileEditor from './pages/ProfileEditor';\nimport UserSettings from './pages/UserSettings';\nimport LoginPage from './pages/LoginPage';\nimport AuthGuard from './components/AuthGuard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const USER_ID_KEY = process.env.REACT_APP_USER_ID_KEY || 'currentUser';\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Retrieve user ID from local storage if available\n    const storedUser = localStorage.getItem(USER_ID_KEY);\n    if (storedUser) {\n      setCurrentUser(storedUser);\n    }\n  }, [USER_ID_KEY]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(AuthGuard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(UserProfile, {\n                  userId: currentUser\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit-profile\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(ProfileEditor, {\n                  userId: currentUser\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settings\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(UserSettings, {\n                  userId: currentUser\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","NavigationBar","UserProfile","ProfileEditor","UserSettings","LoginPage","AuthGuard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","USER_ID_KEY","process","env","REACT_APP_USER_ID_KEY","currentUser","setCurrentUser","storedUser","localStorage","getItem","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","userId","to","replace","_c","$RefreshReg$"],"sources":["/home/dawood/Downloads/Project/thintank-proj/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport UserProfile from './pages/UserProfile';\r\nimport ProfileEditor from './pages/ProfileEditor';\r\nimport UserSettings from './pages/UserSettings';\r\nimport LoginPage from './pages/LoginPage';\r\nimport AuthGuard from './components/AuthGuard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const USER_ID_KEY = process.env.REACT_APP_USER_ID_KEY || 'currentUser';\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Retrieve user ID from local storage if available\r\n    const storedUser = localStorage.getItem(USER_ID_KEY);\r\n    if (storedUser) {\r\n      setCurrentUser(storedUser);\r\n    }\r\n  }, [USER_ID_KEY]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Routes>\r\n          {/* Public Route */}\r\n          <Route path=\"/login\" element={<LoginPage />} />\r\n\r\n          {/* Protected Routes */}\r\n          <Route element={<AuthGuard />}>\r\n            <Route\r\n              path=\"/dashboard\"\r\n              element={\r\n                <>\r\n                  <NavigationBar />\r\n                  <div className=\"container\">\r\n                    <UserProfile userId={currentUser} />\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/edit-profile\"\r\n              element={\r\n                <>\r\n                  <NavigationBar />\r\n                  <div className=\"container\">\r\n                    <ProfileEditor userId={currentUser} />\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/settings\"\r\n              element={\r\n                <>\r\n                  <NavigationBar />\r\n                  <div className=\"container\">\r\n                    <UserSettings userId={currentUser} />\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </Route>\r\n\r\n          <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}