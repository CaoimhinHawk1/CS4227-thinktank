{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18265693\\\\Desktop\\\\sem2-proj\\\\Project\\\\thintank-proj\\\\frontend\\\\src\\\\components\\\\AuthGuard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate, Outlet, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthGuard = () => {\n  _s();\n  const navigate = useNavigate();\n  const authToken = localStorage.getItem('authToken');\n  const currentUser = localStorage.getItem('currentUser');\n  useEffect(() => {\n    // If authentication state changes while on a protected route, handle it\n    const handleStorageChange = e => {\n      if (e.key === 'authToken' && !e.newValue) {\n        // Token was removed, redirect to login\n        navigate('/login', {\n          replace: true\n        });\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [navigate]);\n\n  // Redirect to login if user is not authenticated\n  if (!authToken || !currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthGuard, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthGuard;\nexport default AuthGuard;\nvar _c;\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["React","useEffect","Navigate","Outlet","useNavigate","jsxDEV","_jsxDEV","AuthGuard","_s","navigate","authToken","localStorage","getItem","currentUser","handleStorageChange","e","key","newValue","replace","window","addEventListener","removeEventListener","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/18265693/Desktop/sem2-proj/Project/thintank-proj/frontend/src/components/AuthGuard.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Navigate, Outlet, useNavigate } from 'react-router-dom';\r\n\r\nconst AuthGuard = () => {\r\n  const navigate = useNavigate();\r\n  const authToken = localStorage.getItem('authToken');\r\n  const currentUser = localStorage.getItem('currentUser');\r\n  \r\n  useEffect(() => {\r\n    // If authentication state changes while on a protected route, handle it\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'authToken' && !e.newValue) {\r\n        // Token was removed, redirect to login\r\n        navigate('/login', { replace: true });\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n    };\r\n  }, [navigate]);\r\n\r\n  // Redirect to login if user is not authenticated\r\n  if (!authToken || !currentUser) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n  \r\n  return <Outlet />;\r\n};\r\n\r\nexport default AuthGuard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD,MAAMC,WAAW,GAAGF,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAEvDX,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,mBAAmB,GAAIC,CAAC,IAAK;MACjC,IAAIA,CAAC,CAACC,GAAG,KAAK,WAAW,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;QACxC;QACAR,QAAQ,CAAC,QAAQ,EAAE;UAAES,OAAO,EAAE;QAAK,CAAC,CAAC;MACvC;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEN,mBAAmB,CAAC;IAEvD,OAAO,MAAM;MACXK,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEP,mBAAmB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAEd;EACA,IAAI,CAACC,SAAS,IAAI,CAACG,WAAW,EAAE;IAC9B,oBAAOP,OAAA,CAACJ,QAAQ;MAACoB,EAAE,EAAC,QAAQ;MAACJ,OAAO;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,oBAAOpB,OAAA,CAACH,MAAM;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAAClB,EAAA,CA3BID,SAAS;EAAA,QACIH,WAAW;AAAA;AAAAuB,EAAA,GADxBpB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}